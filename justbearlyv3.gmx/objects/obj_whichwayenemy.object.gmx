<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_aicentre</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set values
global.aipos = 'centre'
state = 'still'
target = 0
image_speed = 0
movecount = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move ai independently
        //game_restart()
        if global.aitarget = 'right' &amp;&amp; global.aipos = 'centre'
        {
            sprite_index = spr_aimoveright
            alarm[0] = 0.5 * room_speed
            global.aitarget = 'right'
            global.aistate = 'moving'
        }
        else if global.aitarget = 'right' &amp;&amp; global.aipos = 'left'
        {
            sprite_index = spr_aimoveleft
            alarm[0] = 0.5 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        //leftclicked
        else if global.target = 'left' &amp;&amp; global.aipos = 'centre'
        {
            sprite_index = spr_aimoveleft
            alarm[0] = 0.5 * room_speed
            global.aitarget = 'left'
            global.aistate = 'moving'
        }
        else if global.aitarget = 'left' &amp;&amp; global.aipos = 'right'
        {
            sprite_index = spr_aimoveright
            alarm[0] = 0.5 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        //centreclicked
        else if global.aitarget = 'centre' &amp;&amp; global.aipos = 'left'
        {
            sprite_index = spr_aimoveleft
            alarm[0] = 0.5 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        else if global.aitarget = 'centre' &amp;&amp; global.aipos = 'right'
        {
            sprite_index = spr_aimoveright
            alarm[0] = 0.5 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        else
        {
            global.aitarget = choose('centre', 'right','left')
            alarm[1] = 1
        }
        

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movetocentre
if global.aitarget = 'centre'
{
    sprite_index = spr_aicentre
        if !audio_is_playing(sf_aistep4)
    {
        audio_play_sound(sf_aistep4,3,false)
    }
    global.aipos = 'centre'
    global.aitarget = 0
    global.aistate = 'still'
    movecount += 1
}
if global.aitarget = 'left'
{
    sprite_index = spr_aileft
            if !audio_is_playing(sf_aistep3)
    {
        audio_play_sound(sf_aistep3,3,false)
    }
    global.aipos = 'left'
    global.aitarget = 0
    global.aistate = 'still'
    movecount += 1
}
if global.aitarget = 'right'
{
    sprite_index = spr_airight
            if !audio_is_playing(sf_aistep3)
    {
        audio_play_sound(sf_aistep3,3,false)
    }
    global.aipos = 'right'
    global.aitarget = 0
    global.aistate = 'still'
    movecount += 1
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///followplayer
if movecount &lt;= 2
{
    if global.state = 'moving'
    {
        //game_restart()
        if global.target = 'right' &amp;&amp; global.aipos = 'centre'
        {
            sprite_index = spr_aimoveright
            if !audio_is_playing(sf_aistep1)
            {
                audio_play_sound(sf_aistep1,2,false)
            }
            alarm[0] = 0.25 * room_speed
            global.aitarget = 'right'
            global.aistate = 'moving'
        }
        else if global.target = 'right' &amp;&amp; global.aipos = 'left'
        {
            sprite_index = spr_aimoveleft
             if !audio_is_playing(sf_aistep1)
            {
                audio_play_sound(sf_aistep1,2,false)
            }
            alarm[0] = 0.25 * room_speed
            global.aitarget = 'right'
            global.aistate = 'moving'
        }
        //leftclicked
        else if global.target = 'left' &amp;&amp; global.aipos = 'centre'
        {
            sprite_index = spr_aimoveleft
             if !audio_is_playing(sf_aistep2)
            {
                audio_play_sound(sf_aistep2,2,false)
            }
            alarm[0] = 0.25 * room_speed
            global.aitarget = 'left'
            global.aistate = 'moving'
        }
        else if global.target = 'left' &amp;&amp; global.aipos = 'right'
        {
            sprite_index = spr_aimoveright
             if !audio_is_playing(sf_aistep2)
            {
                audio_play_sound(sf_aistep2,2,false)
            }
            alarm[0] = 0.25 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        //centreclicked
        else if global.target = 'centre' &amp;&amp; global.aipos = 'left'
        {
            sprite_index = spr_aimoveleft
             if !audio_is_playing(sf_aistep1)
            {
                audio_play_sound(sf_aistep1,2,false)
            }
            alarm[0] = 0.25 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        else if global.target = 'centre' &amp;&amp; global.aipos = 'right'
        {
            sprite_index = spr_aimoveright
             if !audio_is_playing(sf_aistep2)
            {
                audio_play_sound(sf_aistep2,2,false)
            }
            alarm[0] = 0.25 * room_speed
            global.aitarget = 'centre'
            global.aistate = 'moving'
        }
        
    }
}
else
{
        if global.state = 'moving'
        {
            global.aitarget = choose('centre', 'right','left')
            alarm[1] = 1
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if movecount &gt; 1
{
    image_index = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
