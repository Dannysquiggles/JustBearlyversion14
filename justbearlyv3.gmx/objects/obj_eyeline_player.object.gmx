<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eyelineCone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = playerhead.x
y = playerhead.y
 awkscount = 0;
with obj_colour_{image_alpha = 0}
ogStress = global.stress;
//alarm[0] = 90
//alarm[1] = 360//endgame

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_swipe</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>room_width</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//with obj_eyeclosed {instance_destroy()}
if instance_number(obj_eyeline) == 0
{
    instance_create(obj_aihead.x, obj_aihead.y, obj_eyeline)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rotate
point = point_direction(x,y,mouse_x,mouse_y) // find direction


if (global.stopall == 0 &amp;&amp; point &lt; 45) or (global.stopall == 0 &amp;&amp; point &gt; 225) //if point is in bounds, rotate image

{
x = playerhead.x
y = playerhead.y
image_angle = point;

if image_angle &lt; 45 or image_angle &gt; 315 //lookright
{
    sprite_set_offset(spr_eyelineCone, 3,165)
    image_index = 1;
    image_yscale = 1;
}
/*else if image_angle &gt; 45 and image_angle &lt; 135 // lookup
{
    x = ox;
    y = oy;
    image_index = 2;
    image_yscale = 1;
}
*/
else if image_angle &gt; 135 and image_angle &lt; 225 //look right
{
    
    image_index = 1;
    image_yscale = -1;
}
else if image_angle &gt; 225 and image_angle &lt; 315 // lookdown
{
   
    sprite_set_offset(spr_eyelineCone, 6,117)
    image_index = 0;
    image_yscale = 1;
}
}
//if place_meeting(x,y,obj_eyeline) or place_meeting(x,y, obj_eyeline2)
if place_meeting(x,y, obj_danger)
{
    awkscount += 1;
    with obj_colour_ {image_alpha += 0.033}
    //tile_set_alpha(bg_eyes, tile_get_alpha(bg_eyes) + 0.033)
}
else
{
    if awkscount &gt; 0
    {
        awkscount -= 1
        with obj_colour_ {if image_alpha &gt;= 0 {image_alpha -= 0.033}}
        //tile_set_alpha(bg_eyes, tile_get_alpha(bg_eyes) - 0.033)
        }
}
if awkscount &gt;= 30
{
    global.finish = 'lose'
    global.stop = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
