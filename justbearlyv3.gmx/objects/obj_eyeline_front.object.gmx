<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eyeline_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_danger</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_train_ai_front.x
y = obj_train_ai_front.y
image_angle = point_direction(x,y, obj_eyeline_guide_front.x, obj_eyeline_guide_front.y)
awkscount = 0;
//with obj_colour_{image_alpha = 0}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rotate
point = point_direction(x,y,obj_eyeline_guide_front.x,obj_eyeline_guide_front.y) // find direction


if (global.stopall == false &amp;&amp; point &lt; 45) or (global.stopall == false &amp;&amp; point &gt; 225) //if point is in bounds, rotate image

{
    x = obj_train_ai_front.x
    y = obj_train_ai_front.y
    image_angle = point;

    if image_angle &lt; 45 or image_angle &gt; 315 //lookright
    {
        sprite_set_offset(spr_eyeline_front, 3,165)
        image_index = 1;
        image_yscale = 1;
    }
/*else if image_angle &gt; 45 and image_angle &lt; 135 // lookup
{
    x = ox;
    y = oy;
    image_index = 2;
    image_yscale = 1;
}
*/
    else if image_angle &gt; 135 and image_angle &lt; 225 //look right
    {
    
        image_index = 1;
        image_yscale = -1;
    }
    else if image_angle &gt; 225 and image_angle &lt; 315 // lookdown
    {
   
        sprite_set_offset(spr_eyeline_front, 6,117)
        image_index = 0;
        image_yscale = 1;
    }
}
//if place_meeting(x,y,obj_eyeline) or place_meeting(x,y, obj_eyeline2)
/*if place_meeting(x,y, obj_danger)
{
    global.movevar += 0.1
    with fect_shake_growing_hor {stop = 0}
    awkscount += 1;
    with obj_colour_ {image_alpha += 0.033}
    
    //tile_set_alpha(bg_eyes, tile_get_alpha(bg_eyes) + 0.033)
}
else
{
    with fect_shake_growing_hor {stop = 1}
    if awkscount &gt; 0
    {
        awkscount -= 1
        with obj_colour_ {if image_alpha &gt;= 0 {image_alpha -= 0.033}}
        //tile_set_alpha(bg_eyes, tile_get_alpha(bg_eyes) - 0.033)
        }
}
if awkscount &gt;= 30
{
    with fect_shake_growing_hor {stop = 1}
    //if instance_number(obj_redface) == 0{
    //instance_create(room_width/2,room_height/2, obj_redface)
    //global.rate -= 5;
    //global.resist += 0.5;
    /*instance_create(0,0, obj_eyecontact)*/
    //with(obj_timer_train){instance_destroy()}
    //global.finish = 'lose'


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
