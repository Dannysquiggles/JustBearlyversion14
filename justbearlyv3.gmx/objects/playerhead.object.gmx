<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerheaddown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.stop = 0;
audio_play_sound(sf_trainamb,2,true)
global.track = 'eyeline';
image_speed = 0.33
image_angle = point_direction(x,y,mouse_x,mouse_y)// - 180;
stillcount= 0;
awkscount = 0;
ox = x;
oy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rotate

point = point_direction(x,y,obj_playerguide.x,obj_playerguide.y)

// find direction

dir = point - image_angle 

if (point &lt; 45) or (point &gt; 225)//if global.stopall == false //if point is in bounds, rotate image
{
    //if global.stopall == false
    //{
        if /*(!image_angle == point) &amp;&amp;*/ dir &lt; 0
        {
            image_angle = point// -= 1
        }
        else if /*(!image_angle == point) &amp;&amp;*/ dir &gt; 0
        {
            image_angle = point//1
        }

        if place_meeting(x,y,obj_danger) 
        {
            awkscount += 1;
        }
        else
        {
            if awkscount &gt; 0
            {
                awkscount -=0.5
            }
        }

// CHANGE IMAGE
    
        if image_angle &lt; 45 or image_angle &gt; 315 //lookright
        {
            x = ox - 41;
            y = oy + 17;
            sprite_set_offset(spr_playerheadleft, 84,155)
            sprite_index = spr_playerheadleft
            image_yscale = 1;
        }
        else if image_angle &gt; 135 and image_angle &lt; 225 //look right
        {
            x = ox;
            y = oy + 15;
            sprite_index = spr_playerheadleft
            image_yscale = -1;
        }
        else if image_angle &gt; 225 and image_angle &lt; 315 // lookdown
        {
            x = ox;
            y = oy;
            sprite_set_offset(spr_playerheaddown, 125,110)
            sprite_index = spr_playerheaddown
            image_yscale = 1;
        }
/*else if image_angle &gt; 45 and image_angle &lt; 135 // lookup
{
    x = ox;
    y = oy;
    image_index = 2;
    image_yscale = 1;
}
*/
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
