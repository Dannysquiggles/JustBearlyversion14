<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set global variables
global.stopall = true
global.stopai = true
global.finish = false

global.eyeline = 0;

picked = 0

ending = 0;

//set wake up alarms
alarm[0] = 1 //* room_speed // start movement
alarm[1] = 1 * room_speed //start any resting ai

//level timer
alarm[2] = 12 * room_speed //the level ends as a win if you survive this long

//adjust mouse starting position
window_mouse_set(room_width/2, room_height/2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end game
if !ending == 1
{
    if !instance_exists(obj_swipe)
    {
        instance_create(room_width,0,obj_swipe)
        ending = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///activate resting ai
global.stopai = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///activate items
global.stopall = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///react to ending events

//losing sequence
if global.finish == 'lose' &amp;&amp; ending == 0
{
    //pick an eyeline
    if picked == 0
    {
        with obj_eyeline_playerv2
        {
            if place_meeting(x,y, obj_eyeline_rest)
            {
                global.eyeline = 'rest'
                obj_train_manager.picked = 1
            }
            else if place_meeting(x,y, obj_eyeline_front)
            {
                global.eyeline = 'front'
                obj_train_manager.picked = 1
            }
             else if place_meeting(x,y, obj_cat_head)
            {
                global.eyeline = 'cat'
                obj_train_manager.picked = 1
            }
             else if place_meeting(x,y, obj_lizard)
            {
                global.eyeline = 'liz'
                obj_train_manager.picked = 1
            }
             else if place_meeting(x,y, obj_frog_head)
            {
                global.eyeline = 'frog'
                obj_train_manager.picked = 1
            }
        }
    }
///rotate towards point
else if global.eyeline == 'rest'
{
    global.stopall = true;
    /*with playerhead {image_angle = point_direction(x,y, obj_eyeline_rest.x, obj_eyeline_rest.y)}
    with obj_eyeline_playerv2 {image_angle = point_direction(x,y, obj_eyeline_rest.x, obj_eyeline_rest.y)}
    with obj_eyeline_rest {image_angle = point_direction(x,y, playerhead.x, playerhead.y)}
    with obj_aihead_rest {image_angle = point_direction(x,y, playerhead.x, playerhead.y)}*/
    with obj_playerguide { move_towards_point(obj_aihead_rest.x, obj_aihead_rest.y, 10) }
    with obj_eyeline_guider { move_towards_point(playerhead.x, playerhead.y, 10) }
    
    if !instance_exists(obj_redface)
    {
      instance_create(room_width/2, room_height/2, obj_redface)
      
    }
    }
    else if global.eyeline == 'cat'
{
    global.stopall = true;
    with obj_playerguide { move_towards_point(obj_cat_head.x, obj_cat_head.y, 10) }
    with cat { move_towards_point(playerhead.x, playerhead.y, 10) }
    
    if !instance_exists(obj_redface) {instance_create(room_width/2, room_height/2, obj_redface)}
}
else if global.eyeline == 'liz'
{
    global.stopall = true;
    with obj_playerguide { move_towards_point(obj_lizard.x, obj_lizard.y, 10) }
    with liz { move_towards_point(playerhead.x, playerhead.y, 10) }
    
    if !instance_exists(obj_redface) {instance_create(room_width/2, room_height/2, obj_redface)}
}
else if global.eyeline == 'frog'
{
    global.stopall = true;
    with obj_playerguide { move_towards_point(obj_frog_head.x, obj_frog_head.y, 10) }
    with frog { move_towards_point(playerhead.x, playerhead.y, 10) }
    
    if !instance_exists(obj_redface) {instance_create(room_width/2, room_height/2, obj_redface)}
}
        alarm[2] = -1
}

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
