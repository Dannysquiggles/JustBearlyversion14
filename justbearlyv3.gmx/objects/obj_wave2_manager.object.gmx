<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set states
global.wavestate = 'start'
audio_play_sound(sf_waveamb,3,true)
state = 0
zoom = 0
alarm[2] = 20*room_speed;
x = view_xview + view_wview/2
y = view_yview + view_hview/2
maxlimit = room_width;
global.picked = 0;
finished = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn room ender
if !instance_exists(obj_crowd)
{
    instance_create(3776,2132, obj_crowd)
    global.wavestate = 'toolate'
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set condition to lose
state = 'lose'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//game_restart()
if finished = 0{
global.wavestate = 'zoomin'}
else 
{ 
    if finished == 1 {
        instance_create(room_width,0, obj_swipe); 
        with obj_swipe{ image_xscale = 2; image_yscale = 2; }
        finished = 2
        } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move the view
var view = 0;

var amount = view_wview[view]/80

// control the zoom
if (zoom == 'in')
{
//negative zooms in
    scr_view_zoom(-.01,view);
   if state == 'lose'
   {
   if !audio_is_playing(sf_fadewhite)
   {
        audio_play_sound(sf_fadewhite, 3, false)
        audio_stop_sound(sf_waveamb)
   }
   }
}
if (zoom == 'out')
{
//negative zooms in
    scr_view_zoom(.015,view);
}

//follow camera
if finished == 0
{
    scr_camerafollow_tween()
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event tree

if global.wavestate == 'zoomout' //zoom out to maximum
{
    
    if (x &gt; room_width/2)
    {
        move_towards_point(room_width/2,room_height/2, 50)
        with obj_stranger_wave2 { image_alpha += 0.1 }
    } else
    {
    move_towards_point(room_width/2,room_height/2, 0)
    maxlimit = room_width;
    minlimit = 64;
    y = room_height/2
    zoom = 'out'
    x = room_width/2
    }
    if view_wview &gt;= maxlimit //return to correct size in case of errors
    {
        //game_end()
        zoom = 0;
        view_wview = room_width
        view_hview = room_height
        alarm[0] = .25*room_speed //set timer for next event
        global.wavestate = 'neutral'//stop current event

    }
}

if global.wavestate == 'zoomin' //zoom in to minimum
{
    maxlimit = room_width+100;
    minlimit = 2880;
    with obj_waveback { image_alpha -= 0.1 }
    zoom = 'in'
    if (y &lt; 1010)//+(2880/2))
    {
        move_towards_point(1840, 1010, 1)
    } 
    else
    {
    //game_restart()
    move_towards_point(1840, 1010, 0)
    x = 1840 //+ (view_wview/2)
    y = 1010 //+ (view_hview/2)
    }
    if view_wview &lt;= minlimit //return to correct size in case of errors
    {
        
        zoom = 0
        view_wview = 2880
        view_hview = 1620
        //alarm[0] = 0.25*room_speed //set timer for next event
        global.wavestate = 'fadein'//stop current event

    }
}
with obj_wave_hand2 {if image_alpha &gt;= 1 {global.wavestate = 'startwave'}}

if global.wavestate == 'fadein'
{
    with obj_wave_hand2 { image_alpha += 0.1 }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end conditions
if global.clicked = true //player has made their action
{
    
    if finished == 0 {
    //check if friend is covered by a stranger
    with obj_wavefriend2
    {
        //audio_stop_sound(sf_waveamb)
        if place_meeting(x,y, obj_stranger_wave2)
        {
            
            //stop the picked stranger, and disolve all others.
            with obj_stranger_wave2{if change = 1 {image_speed = 0; image_index = 0;} else {disolve = 1}}
            with obj_wave2_manager {alarm[1] = 1*room_speed; finished = 1}
            
        }
        else
        {
            audio_stop_sound(sf_streetamb)
            global.wavestate = 'win'
            with obj_wavefriend2 { sprite_index = spr_friend_wave_2; image_speed = 1; image_index = 11 }
            with obj_wave2_manager {alarm[0] = 3*room_speed; finished = 1; state = 'win'}
            draw_text_transformed(x,y,'WIN',5,5,0)
            
            //room_goto_next() 
            
            
        }
        }
        
    }
}

//PLAYER IS WINNIGN
if state == 'win'
{ 
audio_stop_sound(sf_streetamb)
    finished = 1;
    //play win animation
    with obj_stranger_wave2 {image_alpha -= 0.08}
    with obj_wavefriend2 {    if image_index &gt;= 22
    {
        image_index = 11
    }}
    background_alpha[0] -= 0.08
}

//PLAYER IS LOSING
if state == 'lose'
{
//
audio_stop_sound(sf_streetamb)
    with obj_stranger_wave2 //select front stranger
    {
        if change == 1
        { //game_end()//create changed sprite
            global.xs = image_xscale
            global.ys = image_yscale
            if !instance_exists(obj_angry_ped) {instance_create(x,y,obj_angry_ped)}
            background_alpha[0] -= 0.08
            disolve = 1
        }
    }
    finished = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
